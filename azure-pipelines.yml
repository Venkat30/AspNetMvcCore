# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  # solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  wwwrootDir: 'wwwroot'

steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests - $(buildConfiguration)'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration)'
    publishTestResults: true
    projects: '**/*.Test.csproj'


- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()


# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: DotNetCoreCLI@2
#   displayName: Build
#   inputs:
#     command: build
#     projects: '**/*.csproj'
#     arguments: '--configuration $(buildConfiguration)' # Update this to match your need
# # - task: VSBuild@1
# #   inputs:
# #     solution: '$(solution)'
# #     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
# #     platform: '$(buildPlatform)'
# #     configuration: '$(buildConfiguration)'

# # - task: VSTest@2
# #   inputs:
# #     platform: '$(buildPlatform)'
# #     configuration: '$(buildConfiguration)'
# - task: DotNetCoreCLI@2
#   displayName: 'Run unit tests - $(buildConfiguration)'
#   inputs:
#     command: 'test'
#     arguments: '--no-build --configuration $(buildConfiguration)'
#     publishTestResults: true
#     projects: '**/*.Test.csproj'


# - task: DotNetCoreCLI@2
#   displayName: 'Publish the Project'
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# # this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
#     artifactName: 'AspNetCoreAdvanced'
